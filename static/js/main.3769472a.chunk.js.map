{"version":3,"sources":["Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Table_TableHeader","Table_TableBody","Form","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","onFormSubmit","preventDefault","handleSubmit","state","initialState","inherits","createClass","_this$state","onSubmit","for","type","id","onChange","Component","App","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","characters","filter","character","i","toConsumableArray","className","src_Table","src_Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3769472a.chunk.js","sourcesContent":["import React from 'react';\n\nconst TableHeader = () => { \n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody = props => { \n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\n            </tr>\n        );\n    });\n\n    return <tbody>{rows}</tbody>;\n}\n\nconst Table = (props) => {\n    const { characterData, removeCharacter } = props;\n        return (\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n            </table>\n        );\n}\n\nexport default Table;","import React, {Component} from 'react';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.initialState = {\n            name: '',\n            job: ''\n        };\n\n        this.state = this.initialState;\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name] : value\n        });\n    }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        \n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const { name, job } = this.state; \n\n        return (\n            <form onSubmit={this.onFormSubmit}>\n                <label for=\"name\">Name</label>\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    id=\"name\"\n                    value={name} \n                    onChange={this.handleChange} />\n                <label for=\"job\">Description</label>\n                <input \n                    type=\"text\" \n                    name=\"job\" \n                    id=\"job\"\n                    value={job} \n                    onChange={this.handleChange} />\n                <button type=\"submit\">\n                    Send\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n    state = {\n        characters: []\n    };\n\n    removeCharacter = index => {\n        const { characters } = this.state;\n    \n        this.setState({\n            characters: characters.filter((character, i) => { \n                return i !== index;\n            })\n        });\n    }\n\n    handleSubmit = character => {\n        this.setState({characters: [...this.state.characters, character]});\n    }\n\n    render() {\n        const { characters } = this.state;\n        \n        return (\n            <div className=\"container\">\n                <h1>Simple Project</h1>\n                <Table\n                    characterData={characters}\n                    removeCharacter={this.removeCharacter}\n                />\n                <h3>Add</h3>\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}